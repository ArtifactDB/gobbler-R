% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetchSummary.R
\name{fetchSummary}
\alias{fetchSummary}
\title{Fetch version summary}
\usage{
fetchSummary(
  project,
  asset,
  version,
  registry,
  url,
  cache = NULL,
  forceRemote = FALSE,
  overwrite = FALSE
)
}
\arguments{
\item{project}{String containing the project name.}

\item{asset}{String containing the asset name.}

\item{version}{String containing the version name.}

\item{registry}{String containing a path to the registry.}

\item{url}{String containing the URL to the Gobbler REST API.
Only used for remote access.}

\item{cache}{String containing a path to a cache directory.
If \code{NULL}, an appropriate location is automatically chosen.
Only used for remote access.}

\item{forceRemote}{Logical scalar indicating whether to force remote access.
This will download all files in the \code{path} via the REST API and cache them locally,
even if \code{registry} is on the same filesystem as the caller.}

\item{overwrite}{Logical scalar indicating whether to overwrite the existing cache.
Only used for remote access.}
}
\value{
List containing the summary for this version, with the following fields:
\itemize{
\item \code{upload_user_id}, string containing the identity of the uploader.
\item \code{upload_start}, a \link{POSIXct} object containing the upload start time.
\item \code{upload_finish}, a \link{POSIXct} object containing the upload finish time.
\item \code{on_probation} (optional), a logical scalar indicating whether the upload is probational.
If missing, this can be assumed to be \code{FALSE}.
}
}
\description{
Fetch the summary for a version of an asset of a project.
This will call the REST API if the caller is not on the same filesystem as the registry.
}
\examples{
info <- startGobbler()
removeProject("test", info$staging, url=info$url) # start with a clean slate.
createProject("test", info$staging, url=info$url)

# Mocking up an upload. 
src <- allocateUploadDirectory(info$staging)
write(file=file.path(src, "foo"), "BAR")
uploadDirectory("test", "simple", "v1", src, staging=info$staging, url=info$url)

# Obtain a summary for this version.
fetchSummary("test", "simple", "v1", registry=info$registry, url=info$url)

# Force remote access.
fetchSummary(
    "test", 
    "simple", 
    "v1", 
    registry=info$registry, 
    url=info$url, 
    forceRemote=TRUE
)
}
\author{
Aaron Lun
}
