% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fetchFile.R
\name{fetchFile}
\alias{fetchFile}
\title{Fetch a single file}
\usage{
fetchFile(
  path,
  registry,
  url,
  cache = NULL,
  forceRemote = FALSE,
  overwrite = FALSE
)
}
\arguments{
\item{path}{String containing the relative path to a file within the registry.
This usually takes the form of \code{PROJECT/ASSET/VERSION/*}, where path components should be separated by \code{/}.}

\item{registry}{String containing a path to the registry.}

\item{url}{String containing the URL to the Gobbler REST API.}

\item{cache}{String containing a path to a cache directory.
If \code{NULL}, an appropriate location is automatically chosen.
Only used for remote access.}

\item{forceRemote}{Logical scalar indicating whether to force remote access.
This will download all files in the \code{path} via the REST API and cache them locally,
even if \code{registry} is on the same filesystem as the caller.}

\item{overwrite}{Logical scalar indicating whether to overwrite the existing cache.
Only used for remote access.}
}
\value{
String containing the path to the file on the caller's filesystem.
}
\description{
Fetch a single file from the registry.
This will call the REST API if the caller is not on the same filesystem as the registry.
}
\examples{
info <- startGobbler()
removeProject("test", info$staging, url=info$url) # start with a clean slate.
createProject("test", info$staging, url=info$url)

# Mocking up an upload. 
src <- allocateUploadDirectory(info$staging)
write(file=file.path(src, "foo"), "BAR")
dir.create(file.path(src, "whee"))
write(file=file.path(src, "whee", "blah"), "stuff")
uploadDirectory("test", "simple", "v1", src, staging=info$staging, url=info$url)

fetchFile("test/simple/v1/foo", registry=info$registry, url=info$url)
fetchFile("test/simple/v1/whee/blah", registry=info$registry, url=info$url, forceRemote=TRUE)

}
\author{
Aaron Lun
}
