% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/uploadDirectory.R
\name{uploadDirectory}
\alias{uploadDirectory}
\title{Upload a directory's contents}
\usage{
uploadDirectory(project, asset, version, directory, staging, probation = FALSE)
}
\arguments{
\item{project}{String containing an existing project name.}

\item{asset}{String containing a new or existing asset name.}

\item{version}{String containing a new or existing version name.}

\item{directory}{String containing the path to a directory to be uploaded.
This should be inside \code{staging} for best performance, see \code{\link{allocateUploadDirectory}} for details.}

\item{staging}{String containing the path to the staging directory.}

\item{probation}{Logical scalar indicating whether to upload a probational version.}
}
\value{
List containing \code{project} and \code{version},
the generated names for the project and version respectively.
(If these were explicitly provided in the arguments, the same values are returned verbatim.)
}
\description{
Upload a directory as a new versioned asset of a project in the registry.
}
\examples{
info <- startGobbler()
removeProject("test", info$staging) # start with a clean slate.
createProject("test", info$staging)

src <- allocateUploadDirectory(info$staging)
write(file=file.path(src, "foo"), "BAR")

res <- uploadDirectory(
    project="test", 
    asset="simple", 
    version="v1", 
    directory=src, 
    staging=info$staging)
res

}
\seealso{
\code{\link{createProject}}, to create a new project for uploads.

\code{\link{versionPath}}, to obtain the path to a versioned asset's contents inside the registry.

\code{\link{fetchManifest}}, to obtain the manifest of the versioned asset's contents.
}
\author{
Aaron Lun
}
